#!/usr/bin/python

# main program
if __name__ == '__main__':
	from jail import update
	from jail import mount
	from jail import vhost
	from jail import mysql
	from jail import apache
	from jail import backup
	from jail import setup
	from jail import build
	from jail import chroot
	import argparse

	parser = argparse.ArgumentParser(description='Jail utilities')
	parser.add_argument('--update', action='store_true', help='Update jail directories')
	parser.add_argument('-M', '--mount-all', action='store_true', help='Mount all jail user directories')
	parser.add_argument('-U', '--umount-all', action='store_true', help='Umount all jail user directories')
	parser.add_argument('-m', '--mount', metavar='USER', help='Mount single user jail directories')
	parser.add_argument('-u', '--umount', metavar='USER', help='Umount single user jail directories')
	parser.add_argument('-l', '--list', action='store_true', help='List mounted user jails')
	parser.add_argument('--chroot-update', action='store_true', help='Setup chroot environment')
	parser.add_argument('--groups-setup', action='store_true', help='Create jail groups')
	parser.add_argument('--build-suphp', action='store_true', help='Build suphp wrapper')
	args = parser.parse_args()
	if args.update:
		print 'UpdateGroup()'
		update.UpdateGroup()
	elif args.mount_all:
		mount.MountAll()
	elif args.umount_all:
		mount.UmountAll()
	elif args.mount:
		print 'Mount(%s)' % args.mount
		mount.Mount(args.mount)
	elif args.umount:
		mount.Umount(args.umount)
		print 'Umount(%s)' % args.umount
	elif args.chroot_update:
		print 'ChrootUpdate()'
		chroot.MakeBase()
		chroot.TouchEmptyFiles(chroot.ChrootJailTouch)
		chroot.CopyJailFiles(chroot.ChrootJailCopy)
	elif args.groups_setup:
		print 'GroupsSetup()'
		setup.GroupsSetup()
	elif args.build_suphp:
		build.SuphpWrapper()
	elif args.list:
		print '\n'.join(mount.List())
